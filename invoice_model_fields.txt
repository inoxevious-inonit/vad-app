0784211449
{
'name': {'type': 'char', 'string': 'Number'},
'highest_name': {'type': 'char', 'string': 'Highest Name'}, 
'show_name_warning': {'type': 'boolean', 'string': 'Show Name Warning'}, 
'date': {'type': 'date', 'string': 'Date'}, 
'ref': {'type': 'char', 'string': 'Reference'}, 
'narration': {'type': 'text', 'string': 'Terms and Conditions'}, 
'state': {'type': 'selection', 'string': 'Status'}, 
'posted_before': {'type': 'boolean', 'help': 'Technical field for knowing if the move has been posted before', 'string': 'Posted Before'}, 
'move_type': {'type': 'selection', 'string': 'Type'}, 
'type_name': {'type': 'char', 'string': 'Type Name'}, 
'to_check': {'type': 'boolean', 'help': 'If this checkbox is ticked, it means that the user was not sure of all the related information at the time of the creation of the move and that the move needs to be checked again.', 'string': 'To Check'}, 
'journal_id': {'type': 'many2one', 'string': 'Journal'}, 
'suitable_journal_ids': {'type': 'many2many', 'string': 'Suitable Journal'}, 
'company_id': {'type': 'many2one', 'string': 'Company'}, 
'company_currency_id': {'type': 'many2one', 'string': 'Company Currency'}, 
'currency_id': {'type': 'many2one', 'string': 'Currency'}, 
'line_ids': {'type': 'one2many', 'string': 'Journal Items'}, 
'partner_id': {'type': 'many2one', 'string': 'Partner'}, 
'commercial_partner_id': {'type': 'many2one', 'string': 'Commercial Entity'}, 
'country_code': {'type': 'char', 'help': 'The ISO country code in two chars. \nYou can use this field for quick search.', 'string': 'Country Code'}, 
'user_id': {'type': 'many2one', 'help': 'Technical field used to fit the generic behavior in mail templates.', 'string': 'User'}, 
'is_move_sent': {'type': 'boolean', 'help': 'It indicates that the invoice/payment has been sent.', 'string': 'Is Move Sent'}, 
'partner_bank_id': {'type': 'many2one', 'help': 'Bank Account Number to which the invoice will be paid. A Company bank account if this is a Customer Invoice or Vendor Credit Note, otherwise a Partner bank account number.', 'string': 'Recipient Bank'}, 
'payment_reference': {'type': 'char', 'help': 'The payment reference to set on journal items.', 'string': 'Payment Reference'}, 
'payment_id': {'type': 'many2one', 'string': 'Payment'}, 
'statement_line_id': {'type': 'many2one', 'string': 'Statement Line'}, 
'amount_untaxed': {'type': 'monetary', 'string': 'Untaxed Amount'}, 
'amount_tax': {'type': 'monetary', 'string': 'Tax'}, 
'amount_total': {'type': 'monetary', 'string': 'Total'}, 
'amount_residual': {'type': 'monetary', 'string': 'Amount Due'}, 
'amount_untaxed_signed': {'type': 'monetary', 'string': 'Untaxed Amount Signed'}, 
'amount_tax_signed': {'type': 'monetary', 'string': 'Tax Signed'}, 
'amount_total_signed': {'type': 'monetary', 'string': 'Total Signed'}, 
'amount_residual_signed': {'type': 'monetary', 'string': 'Amount Due Signed'}, 
'amount_by_group': {'type': 'binary', 'help': 'Edit Tax amounts if you encounter rounding issues.', 'string': 'Tax amount by group'}, 
'payment_state': {'type': 'selection', 'string': 'Payment Status'}, 
'tax_cash_basis_rec_id': {'type': 'many2one', 'help': 'Technical field used to keep track of the tax cash basis reconciliation. This is needed when cancelling the source: it will post the inverse journal entry to cancel that part too.', 'string': 'Tax Cash Basis Entry of'}, 
'tax_cash_basis_move_id': {'type': 'many2one', 'help': 'The journal entry from which this tax cash basis journal entry has been created.', 'string': 'Origin Tax Cash Basis Entry'}, 'auto_post': {'type': 'boolean', 'help': 'If this checkbox is ticked, this entry will be automatically posted at its date.', 'string': 'Post Automatically'}, 'reversed_entry_id': {'type': 'many2one', 'string': 'Reversal of'}, 'fiscal_position_id': {'type': 'many2one', 'help': 'Fiscal positions are used to adapt taxes and accounts for particular customers or sales orders/invoices. The default value comes from the customer.', 'string': 'Fiscal Position'}, 'invoice_user_id': {'type': 'many2one', 'string': 'Salesperson'}, 
'invoice_date': {'type': 'date', 'string': 'Invoice/Bill Date'}, 
'invoice_date_due': {'type': 'date', 'string': 'Due Date'}, 
'invoice_origin': {'type': 'char', 'help': 'The document(s) that generated the invoice.', 'string': 'Origin'}, 
'invoice_payment_term_id': {'type': 'many2one', 'string': 'Payment Terms'}, 
'invoice_line_ids': {'type': 'one2many', 'string': 'Invoice lines'}, 
'invoice_incoterm_id': {'type': 'many2one', 'help': 'International Commercial Terms are a series of predefined commercial terms used in international transactions.', 'string': 'Incoterm'}, 
'display_qr_code': {'type': 'boolean', 'string': 'Display QR-code'}, 
'qr_code_method': {'type': 'selection', 'help': 'Type of QR-code to be generated for the payment of this invoice, when printing it. If left blank, the first available and usable method will be used.', 'string': 'Payment QR-code'}, 
'invoice_outstanding_credits_debits_widget': {'type': 'text', 'string': 'Invoice Outstanding Credits Debits Widget'}, 
'invoice_has_outstanding': {'type': 'boolean', 'string': 'Invoice Has Outstanding'}, 
'invoice_payments_widget': {'type': 'text', 'string': 'Invoice Payments Widget'}, 
'invoice_vendor_bill_id': {'type': 'many2one', 'help': 'Auto-complete from a past bill.', 'string': 'Vendor Bill'}, 
'invoice_source_email': {'type': 'char', 'string': 'Source Email'}, 
'invoice_partner_display_name': {'type': 'char', 'string': 'Invoice Partner Display Name'}, 
'invoice_cash_rounding_id': {'type': 'many2one', 'help': 'Defines the smallest coinage of the currency that can be used to pay by cash.', 'string': 'Cash Rounding Method'}, 
'invoice_filter_type_domain': {'type': 'char', 'help': 'Technical field used to have a dynamic domain on journal / taxes in the form view.', 'string': 'Invoice Filter Type Domain'}, 
'bank_partner_id': {'type': 'many2one', 'help': 'Technical field to get the domain on the bank', 'string': 'Bank Partner'}, 
'invoice_has_matching_suspense_amount': {'type': 'boolean', 'help': 'Technical field used to display an alert on invoices if there is at least a matching amount in any supsense account.', 'string': 'Invoice Has Matching Suspense Amount'}, 
'tax_lock_date_message': {'type': 'char', 'help': "Technical field used to display a message when the invoice's accounting date is prior of the tax lock date.", 'string': 'Tax Lock Date Message'}, 
'has_reconciled_entries': {'type': 'boolean', 'string': 'Has Reconciled Entries'}, 'show_reset_to_draft_button': {'type': 'boolean', 'string': 'Show Reset To Draft Button'}, 
'restrict_mode_hash_table': {'type': 'boolean', 'help': 'If ticked, the accounting entry or invoice receives a hash as soon as it is posted and cannot be modified anymore.', 'string': 'Lock Posted Entries with Hash'}, 
'secure_sequence_number': {'type': 'integer', 'string': 'Inalteralbility No Gap Sequence #'}, 
'inalterable_hash': {'type': 'char', 'string': 'Inalterability Hash'}, 
'string_to_hash': {'type': 'char', 'string': 'String To Hash'}, 
'attachment_ids': {'type': 'one2many', 'string': 'Attachments'}, 
'payment_state_before_switch': {'type': 'char', 'help': 'Technical field to keep the value of payment_state when switching from invoicing to accounting (using invoicing_switch_threshold setting field). It allows keeping the former payment state, so that we can restore it if the user misconfigured the switch date and wants to change it.', 'string': 'Payment State Before Switch'}, 
'edi_document_ids': {'type': 'one2many', 'string': 'Edi Document'}, 
'edi_state': {'type': 'selection', 'help': 'The aggregated state of all the EDIs of this move', 'string': 'Electronic invoicing'}, 
'edi_error_count': {'type': 'integer', 'help': 'How many EDIs are in error for this move ?', 'string': 'Edi Error Count'}, 
'edi_web_services_to_process': {'type': 'text', 'help': 'Technical field to display the documents that will be processed by the CRON', 'string': 'Edi Web Services To Process'}, 
'edi_show_cancel_button': {'type': 'boolean', 'string': 'Edi Show Cancel Button'}, 
'duplicated_vendor_ref': {'type': 'char', 'string': 'Duplicated vendor reference'}, 
'extract_state': {'type': 'selection', 'string': 'Extract state'}, 
'extract_status_code': {'type': 'integer', 'string': 'Status code'}, 
'extract_error_message': {'type': 'text', 'string': 'Error message'}, 
'extract_remote_id': {'type': 'integer', 'help': 'Invoice extract id', 'string': 'Id of the request to IAP-OCR'}, 
'extract_word_ids': {'type': 'one2many', 'string': 'Extract Word'}, 
'extract_can_show_resend_button': {'type': 'boolean', 'string': 'Can show the ocr resend button'}, 'extract_can_show_send_button': {'type': 'boolean', 'string': 'Can show the ocr send button'}, 
'transaction_ids': {'type': 'many2many', 'string': 'Transactions'}, 
'authorized_transaction_ids': {'type': 'many2many', 'string': 'Authorized Transactions'}, 
'transfer_model_id': {'type': 'many2one', 'string': 'Originating Model'}, 
'tax_closing_end_date': {'type': 'date', 'help': 'Technical field used for VAT closing, containig the end date of the period this entry closes.', 'string': 'Tax Closing End Date'}, 
'tax_report_control_error': {'type': 'boolean', 'help': 'technical field used to know if there was a failed control check', 'string': 'Tax Report Control Error'}, 'team_id': {'type': 'many2one', 'string': 'Sales Team'}, 'partner_shipping_id': {'type': 'many2one', 'help': 'Delivery address for current invoice.', 'string': 'Delivery Address'},
'asset_id': {'type': 'many2one', 'string': 'Asset'},
 'asset_asset_type': {'type': 'selection', 'string': 'Asset Type'},
 'asset_remaining_value': {'type': 'monetary', 'string': 'Depreciable Value'},
 'asset_depreciated_value': {'type': 'monetary', 'string': 'Cumulative Depreciation'},
 'asset_manually_modified': {'type': 'boolean', 'help': 'This is a technical field stating that a depreciation line has been manually modified. It is used to recompute the depreciation table of an asset/deferred revenue.', 'string': 'Asset Manually Modified'},
 'asset_value_change': {'type': 'boolean', 'help': 'This is a technical field set to true when this move is the result of the changing of value of an asset', 'string': 'Asset Value Change'},
 'asset_ids': {'type': 'one2many', 'string': 'Assets'},
 'asset_ids_display_name': {'type': 'char', 'string': 'Asset Ids Display Name'},
 'asset_id_display_name': {'type': 'char', 'string': 'Asset Id Display Name'},
 'number_asset_ids': {'type': 'integer', 'string': 'Number Asset'},
 'draft_asset_ids': {'type': 'boolean', 'string': 'Draft Asset'},
 'reversal_move_id': {'type': 'one2many', 'string': 'Reversal Move'},
 'campaign_id': {'type': 'many2one', 'help': 'This is a name that helps you keep track of your different campaign efforts, e.g. Fall_Drive, Christmas_Special', 'string': 'Campaign'},
 'source_id': {'type': 'many2one', 'help': 'This is the source of the link, e.g. Search Engine, another domain, or name of email list', 'string': 'Source'},
 'medium_id': {'type': 'many2one', 'help': 'This is the method of delivery, e.g. Postcard, Email, or Banner Ad', 'string': 'Medium'},
 'activity_ids': {'type': 'one2many', 'string': 'Activities'},
 'activity_state': {'type': 'selection', 'help': 'Status based on activities\nOverdue: Due date is already passed\nToday: Activity date is today\nPlanned: Future activities.', 'string': 'Activity State'},
 'activity_date_deadline': {'type': 'date', 'string': 'Next Activity Deadline'},
 'activity_exception_decoration': {'type': 'selection', 'help': 'Type of the exception activity on record.', 'string': 'Activity Exception Decoration'},
 'activity_exception_icon': {'type': 'char', 'help': 'Icon to indicate an exception activity.', 'string': 'Icon'},
 'access_url': {'type': 'char', 'help': 'Customer Portal URL', 'string': 'Portal Access URL'},
 'access_token': {'type': 'char', 'string': 'Security Token'},
 'access_warning': {'type': 'text', 'string': 'Access warning'},
 'sequence_prefix': {'type': 'char', 'string': 'Sequence Prefix'},
 'sequence_number': {'type': 'integer', 'string': 'Sequence Number'},
 'activity_user_id': {'type': 'many2one', 'string': 'Responsible User'},
 'activity_type_id': {'type': 'many2one', 'string': 'Next Activity Type'},
 'activity_type_icon': {'type': 'char', 'help': 'Font awesome icon e.g. fa-tasks', 'string': 'Activity Type Icon'},
 'activity_summary': {'type': 'char', 'string': 'Next Activity Summary'},
 'message_is_follower': {'type': 'boolean', 'string': 'Is Follower'},
 'message_follower_ids': {'type': 'one2many', 'string': 'Followers'},
 'message_partner_ids': {'type': 'many2many', 'string': 'Followers (Partners)'},
 'message_channel_ids': {'type': 'many2many', 'string': 'Followers (Channels)'},
 'message_ids': {'type': 'one2many', 'string': 'Messages'},
 'message_unread': {'type': 'boolean', 'help': 'If checked, new messages require your attention.', 'string': 'Unread Messages'},
 'message_unread_counter': {'type': 'integer', 'help': 'Number of unread messages', 'string': 'Unread Messages Counter'},
 'message_needaction': {'type': 'boolean', 'help': 'If checked, new messages require your attention.', 'string': 'Action Needed'},
 'message_needaction_counter': {'type': 'integer', 'help': 'Number of messages which requires an action', 'string': 'Number of Actions'},
 'message_has_error': {'type': 'boolean', 'help': 'If checked, some messages have a delivery error.', 'string': 'Message Delivery error'},
 'message_has_error_counter': {'type': 'integer', 'help': 'Number of messages with delivery error', 'string': 'Number of errors'},
 'message_attachment_count': {'type': 'integer', 'string': 'Attachment Count'},
 'message_main_attachment_id': {'type': 'many2one', 'string': 'Main Attachment'},
 'website_message_ids': {'type': 'one2many', 'help': 'Website communication history', 'string': 'Website Messages'},
 'message_has_sms_error': {'type': 'boolean', 'help': 'If checked, some messages have a delivery error.', 'string': 'SMS Delivery error'},
 'id': {'type': 'integer', 'string': 'ID'},
 'display_name': {'type': 'char', 'string': 'Display Name'},
 'create_uid': {'type': 'many2one', 'string': 'Created by'},
 'create_date': {'type': 'datetime', 'string': 'Created on'},
 'write_uid': {'type': 'many2one', 'string': 'Last Updated by'},
 'write_date': {'type': 'datetime', 'string': 'Last Updated on'},
 '__last_update': {'type': 'datetime', 'string': 'Last Modified on'},
 'x_studio_html_field_KBrPP': {'type': 'html', 'string': 'New Html'}
 }