inv items 
{
'move_id': {'type': 'many2one', 'help': 'The move of this entry line.', 'string': 'Journal Entry'}, 
'move_name': {'type': 'char', 'string': 'Number'}, 
'date': {'type': 'date', 'string': 'Date'}, 
'ref': {'type': 'char', 'string': 'Reference'}, 
'parent_state': {'type': 'selection', 'string': 'Status'}, 
'journal_id': {'type': 'many2one', 'string': 'Journal'}, 
'company_id': {'type': 'many2one', 'string': 'Company'}, 
'company_currency_id': {'type': 'many2one', 'help': 'Utility field to express amount currency', 'string': 'Company Currency'}, 
'tax_fiscal_country_id': {'type': 'many2one', 'help': 'The country to use the tax reports from for this company', 'string': 'Fiscal Country'}, 
'account_id': {'type': 'many2one', 'string': 'Account'}, 
'account_internal_type': {'type': 'selection', 'help': "The 'Internal Type' is used for features available on different types of accounts: liquidity type is for cash or bank accounts, payable/receivable is for vendor/customer accounts.", 'string': 'Internal Type'}, 
'account_internal_group': {'type': 'selection', 'help': "The 'Internal Group' is used to filter accounts based on the internal group set on the account type.", 'string': 'Internal Group'}, 
'account_root_id': {'type': 'many2one', 'string': 'Account Root'}, 
'sequence': {'type': 'integer', 'string': 'Sequence'}, 
'name': {'type': 'char', 'string': 'Label'}, 
'quantity': {'type': 'float', 'help': 'The optional quantity expressed by this line, eg: number of product sold. The quantity is not a legal requirement but is very useful for some reports.', 'string': 'Quantity'}, 
'price_unit': {'type': 'float', 'string': 'Unit Price'}, 
'discount': {'type': 'float', 'string': 'Discount (%)'}, 
'debit': {'type': 'monetary', 'string': 'Debit'}, 
'credit': {'type': 'monetary', 'string': 'Credit'}, 
'balance': {'type': 'monetary', 'help': 'Technical field holding the debit - credit in order to open meaningful graph views from reports', 'string': 'Balance'}, 
'cumulated_balance': {'type': 'monetary', 'help': 'Cumulated balance depending on the domain and the order chosen in the view.', 'string': 'Cumulated Balance'}, 
'amount_currency': {'type': 'monetary', 'help': 'The amount expressed in an optional other currency if it is a multi-currency entry.', 'string': 'Amount in Currency'}, 
'price_subtotal': {'type': 'monetary', 'string': 'Subtotal'}, 
'price_total': {'type': 'monetary', 'string': 'Total'}, 
'reconciled': {'type': 'boolean', 'string': 'Reconciled'}, 
'blocked': {'type': 'boolean', 'help': 'You can check this box to mark this journal item as a litigation with the associated partner', 'string': 'No Follow-up'}, 
'date_maturity': {'type': 'date', 'help': 'This field is used for payable and receivable journal entries. You can put the limit date for the payment of this line.', 'string': 'Due Date'}, 
'currency_id': {'type': 'many2one', 'string': 'Currency'}, 
'partner_id': {'type': 'many2one', 'string': 'Partner'}, 
'product_uom_id': {'type': 'many2one', 'string': 'Unit of Measure'}, 
'product_id': {'type': 'many2one', 'string': 'Product'}, 
'product_uom_category_id': {'type': 'many2one', 'help': 'Conversion between Units of Measure can only occur if they belong to the same category. The conversion will be made based on the ratios.', 'string': 'Category'}, 
'reconcile_model_id': {'type': 'many2one', 'string': 'Reconciliation Model'}, 
'payment_id': {'type': 'many2one', 'help': 'The payment that created this entry', 'string': 'Originator Payment'}, 
'statement_line_id': {'type': 'many2one', 'help': 'The statement line that created this entry', 'string': 'Originator Statement Line'}, 
'statement_id': {'type': 'many2one', 'help': 'The bank statement used for bank reconciliation', 'string': 'Statement'}, 
'tax_ids': {'type': 'many2many', 'help': 'Taxes that apply on the base amount', 'string': 'Taxes'}, 
'tax_line_id': {'type': 'many2one', 'help': 'Indicates that this journal item is a tax line', 'string': 'Originator Tax'}, 
'tax_group_id': {'type': 'many2one', 'help': 'technical field for widget tax-group-custom-field', 'string': 'Originator tax group'}, 
'tax_base_amount': {'type': 'monetary', 'string': 'Base Amount'}, 
'tax_exigible': {'type': 'boolean', 'help': 'Technical field used to mark a tax line as exigible in the vat report or not (only exigible journal items are displayed). By default all new journal items are directly exigible, but with the feature cash_basis on taxes, some will become exigible only when the payment is recorded.', 'string': 'Appears in VAT report'}, 
'tax_repartition_line_id': {'type': 'many2one', 'help': 'Tax distribution line that caused the creation of this move line, if any', 'string': 'Originator Tax Distribution Line'}, 
'tax_tag_ids': {'type': 'many2many', 'help': 'Tags assigned to this line by the tax creating it, if any. It determines its impact on financial reports.', 'string': 'Tags'}, 
'tax_audit': {'type': 'char', 'help': 'Computed field, listing the tax grids impacted by this line, and the amount it applies to each of them.', 'string': 'Tax Audit String'}, 
'amount_residual': {'type': 'monetary', 'help': 'The residual amount on a journal item expressed in the company currency.', 'string': 'Residual Amount'}, 
'amount_residual_currency': {'type': 'monetary', 'help': 'The residual amount on a journal item expressed in its currency (possibly not the company currency).', 'string': 'Residual Amount in Currency'}, 
'full_reconcile_id': {'type': 'many2one', 'string': 'Matching'}, 
'matched_debit_ids': {'type': 'one2many', 'help': 'Debit journal items that are matched with this journal item.', 'string': 'Matched Debits'}, 
'matched_credit_ids': {'type': 'one2many', 'help': 'Credit journal items that are matched with this journal item.', 'string': 'Matched Credits'}, 
'matching_number': {'type': 'char', 'help': "Matching number for this line, 'P' if it is only partially reconcile, or the name of the full reconcile if it exists.", 'string': 'Matching #'}, 
'analytic_line_ids': {'type': 'one2many', 'string': 'Analytic lines'}, 
'analytic_account_id': {'type': 'many2one', 'string': 'Analytic Account'}, 
'analytic_tag_ids': {'type': 'many2many', 'string': 'Analytic Tags'}, 
'recompute_tax_line': {'type': 'boolean', 'help': 'Technical field used to know on which lines the taxes must be recomputed.', 'string': 'Recompute Tax Line'}, 
'display_type': {'type': 'selection', 'help': 'Technical field for UX purpose.', 'string': 'Display Type'}, 
'is_rounding_line': {'type': 'boolean', 'help': 'Technical field used to retrieve the cash rounding line.', 'string': 'Is Rounding Line'}, 
'exclude_from_invoice_tab': {'type': 'boolean', 'help': 'Technical field used to exclude some lines from the invoice_line_ids tab in the form view.', 'string': 'Exclude From Invoice Tab'}, 
'move_attachment_ids': {'type': 'one2many', 'string': 'Move Attachment'}, 
'predict_from_name': {'type': 'boolean', 'help': 'Technical field used to know on which lines the prediction must be done.', 'string': 'Predict From Name'}, 
'expected_pay_date': {'type': 'date', 'help': 'Expected payment date as manually set through the customer statement (e.g: if you had the customer on the phone and want to remember the date he promised he would pay)', 'string': 'Expected Payment Date'}, 
'internal_note': {'type': 'text', 'help': 'Note you can set through the customer statement about a receivable journal item', 'string': 'Internal Note'}, 
'next_action_date': {'type': 'date', 'help': 'Date where the next action should be taken for a receivable item. Usually, automatically set when sending reminders through the customer statement.', 'string': 'Next Action Date'}, 
'asset_ids': {'type': 'many2many', 'help': 'Asset created from this Journal Item', 'string': 'Asset Linked'}, 
'followup_line_id': {'type': 'many2one', 'string': 'Follow-up Level'}, 
'followup_date': {'type': 'date', 'string': 'Latest Follow-up'}, 
'sale_line_ids': {'type': 'many2many', 'string': 'Sales Order Lines'}, 
'id': {'type': 'integer', 'string': 'ID'}, 
'display_name': {'type': 'char', 'string': 'Display Name'}, 
'create_uid': {'type': 'many2one', 'string': 'Created by'}, 
'create_date': {'type': 'datetime', 'string': 'Created on'}, 
'write_uid': {'type': 'many2one', 'string': 'Last Updated by'}, 
'write_date': {'type': 'datetime', 'string': 'Last Updated on'}, 
'__last_update': {'type': 'datetime', 'string': 'Last Modified on'}}